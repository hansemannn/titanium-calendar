/**
 * This file was auto-generated by the Titanium Module SDK helper for Android
 * Appcelerator Titanium Mobile
 * Copyright (c) 2009-present by Appcelerator, Inc. All Rights Reserved.
 * Licensed under the terms of the Apache Public License
 * Please see the LICENSE included with this distribution for details.
 *
 */

package ti.calendar

import android.R
import android.app.AlertDialog
import android.view.LayoutInflater
import androidx.fragment.app.FragmentActivity
import com.google.android.material.datepicker.MaterialDatePicker
import com.google.android.material.datepicker.MaterialTextInputPicker
import org.appcelerator.kroll.KrollDict
import org.appcelerator.kroll.KrollFunction
import org.appcelerator.kroll.KrollModule
import org.appcelerator.kroll.annotations.Kroll
import org.appcelerator.titanium.TiApplication
import java.util.*


@Kroll.module(name = "TitaniumCalendar", id = "ti.calendar")
class TitaniumCalendarModule: KrollModule() {

	@Kroll.method
	fun showDatePicker(params: KrollDict) {
		val value: Date = params["value"] as? Date ?: Date()
		val callback = params["callback"] as? KrollFunction

		val builder = MaterialDatePicker.Builder.datePicker()
		val activity = TiApplication.getAppCurrentActivity() as FragmentActivity

		builder.setSelection(value.time)
		builder.setInputMode()

		val picker = builder.build()
		picker.addOnNegativeButtonClickListener { picker.dismiss() }
		picker.addOnPositiveButtonClickListener {
			val event = KrollDict()
			event["date"] = Date(it)

			callback?.call(krollObject, event)
		}

		picker.show(activity.supportFragmentManager!!, picker.toString())
	}

	@Kroll.method
	fun showDateRangePicker(params: KrollDict) {
		val value: Date = params["value"] as? Date ?: Date()
		val callback = params["callback"] as? KrollFunction

		val builder = MaterialDatePicker.Builder.dateRangePicker()
		val activity = TiApplication.getAppCurrentActivity() as FragmentActivity

		builder.setSelection(androidx.core.util.Pair(value.time, value.time))

		val picker = builder.build()
		picker.addOnNegativeButtonClickListener { picker.dismiss() }
		picker.addOnPositiveButtonClickListener {
			val event = KrollDict()

			it.first?.let { startDate ->
				event["startDate"] = Date(startDate)
			}
			it.second?.let { endDate ->
				event["endDate"] = Date(endDate)
			}

			callback?.call(krollObject, event)
		}

		picker.show(activity.supportFragmentManager!!, picker.toString())
	}
}
