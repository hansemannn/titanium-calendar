// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.3 (swiftlang-1200.0.29.2 clang-1200.0.30.1)
// swift-module-flags: -target x86_64-apple-ios11.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name TiCalendar
import JTAppleCalendar
import Swift
@_exported import TiCalendar
import TitaniumKit
import UIKit
@_inheritsConvenienceInitializers @objc(TiCalendarCalendarView) public class TiCalendarCalendarView : TitaniumKit.TiUIView {
  @objc override dynamic public func frameSizeChanged(_ frame: CoreGraphics.CGRect, bounds: CoreGraphics.CGRect)
  @objc deinit
  @objc override dynamic public init(frame: CoreGraphics.CGRect)
  @objc required dynamic public init?(coder: Foundation.NSCoder)
}
extension TiCalendarCalendarView : JTAppleCalendar.JTACMonthViewDataSource, JTAppleCalendar.JTACMonthViewDelegate {
  public func calendar(_ calendar: JTAppleCalendar.JTACMonthView, cellForItemAt date: Foundation.Date, cellState: JTAppleCalendar.CellState, indexPath: Foundation.IndexPath) -> JTAppleCalendar.JTACDayCell
  public func calendar(_ calendar: JTAppleCalendar.JTACMonthView, willDisplay cell: JTAppleCalendar.JTACDayCell, forItemAt date: Foundation.Date, cellState: JTAppleCalendar.CellState, indexPath: Foundation.IndexPath)
  public func configureCalendar(_ calendar: JTAppleCalendar.JTACMonthView) -> JTAppleCalendar.ConfigurationParameters
}
