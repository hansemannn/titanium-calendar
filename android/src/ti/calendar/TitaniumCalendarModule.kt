/**
 * This file was auto-generated by the Titanium Module SDK helper for Android
 * Appcelerator Titanium Mobile
 * Copyright (c) 2009-present by Appcelerator, Inc. All Rights Reserved.
 * Licensed under the terms of the Apache Public License
 * Please see the LICENSE included with this distribution for details.
 *
 */

package ti.calendar

import androidx.fragment.app.FragmentActivity
import com.google.android.material.datepicker.MaterialDatePicker
import org.appcelerator.kroll.KrollDict
import org.appcelerator.kroll.KrollFunction
import org.appcelerator.kroll.KrollModule
import org.appcelerator.kroll.annotations.Kroll
import org.appcelerator.kroll.common.Log
import org.appcelerator.titanium.TiApplication
import java.text.SimpleDateFormat
import java.util.*

@Kroll.module(name = "TitaniumCalendar", id = "ti.calendar")
class TitaniumCalendarModule: KrollModule() {

	@Kroll.method
	fun showDatePicker(params: KrollDict) {
		val value: Date = params["value"] as? Date ?: Date()
		val callback = params["callback"] as? KrollFunction
		val title = params["title"] as? String

		val builder = MaterialDatePicker.Builder.datePicker()
		val activity = TiApplication.getAppCurrentActivity() as FragmentActivity

		builder.setSelection(value.time)

		title?.let {
			builder.setTitleText(title)
		}

		val picker = builder.build()
		picker.addOnNegativeButtonClickListener { picker.dismiss() }
		picker.addOnPositiveButtonClickListener {
			val event = KrollDict()
			event["date"] = utcDate(it)

			callback?.call(krollObject, event)
		}

		picker.show(activity.supportFragmentManager, picker.toString())
	}

	@Kroll.method
	fun showDateRangePicker(params: KrollDict) {
		val value = params.getKrollDict("value")

		val startDate = value["startDate"] as? Date ?: Date()
		val endDate = value["endDate"] as? Date ?: Date()

		val callback = params["callback"] as? KrollFunction
	    val title = params["title"] as? String

		val builder = MaterialDatePicker.Builder.dateRangePicker()
		val activity = TiApplication.getAppCurrentActivity() as FragmentActivity

		builder.setSelection(androidx.core.util.Pair(startDate.time, endDate.time))

		title?.let {
			builder.setTitleText(title)
		}

		val picker = builder.build()
		picker.addOnNegativeButtonClickListener { picker.dismiss() }
		picker.addOnPositiveButtonClickListener {
			val event = KrollDict()

			it.first?.let { startDate ->
				event["startDate"] = utcDate(startDate)
			}
			it.second?.let { endDate ->
				event["endDate"] = utcDate(endDate)
			}

			callback?.call(krollObject, event)
		}

		picker.show(activity.supportFragmentManager, picker.toString())
	}

	// FIXME: Remove this hack once the material date picker handles this properly
	// SEE: https://github.com/material-components/material-components-android/issues/882#issuecomment-638983598
	private fun utcDate(it: Long): Date? {
		val utcTime = Date(it)
		val format = "yyy/MM/dd HH:mm:ss"
		val sdf = SimpleDateFormat(format, Locale.getDefault())
		sdf.timeZone = TimeZone.getTimeZone("UTC")
		val gmtTime = SimpleDateFormat(format, Locale.getDefault()).parse(sdf.format(utcTime))

		gmtTime?.let {  date ->
			return date
		}

		return null
	}
}
